apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

// Check dependencies.
// https://github.com/ben-manes/gradle-versions-plugin
apply plugin: 'com.github.ben-manes.versions'

// Provide makeVersionCodeForDensity method to split by density
apply from: '../config/split/split-density.gradle'

// Signing production apk with rootProject.ext.releaseFileSpaceSigningConfig data
if (file("../config/split/split-density.gradle").exists()) {
    apply from: '../config/signing/filespace-signing.gradle'
} else {
    apply from: '../config/split/split-density-template.gradle'
}

// Lint, pmd...
apply from: '../config/quality/quality.gradle'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.mercandalli.android.apps.files"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.appVersionCode
        versionName rootProject.ext.appVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        resConfigs "en", "fr"

        // https://github.com/Dimezis/BlurView
        renderscriptTargetApi rootProject.ext.targetSdkVersion
        renderscriptSupportModeEnabled true
    }

    signingConfigs {
        releaseSigningConfig rootProject.ext.releaseFileSpaceSigningConfig
    }

    buildTypes {
        release {
            signingConfig signingConfigs.releaseSigningConfig
            minifyEnabled true
            shrinkResources true
            multiDexEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            versionNameSuffix ".dev"
        }
    }

    flavorDimensions "density"

    productFlavors {
        // Dimension flavors
        universal {
            dimension "density"
            versionCode rootProject.ext.makeVersionCodeForDensity('all')
        }
        mdpi {
            dimension "density"
            resConfigs "mdpi"
            versionCode rootProject.ext.makeVersionCodeForDensity('mdpi')
        }
        hdpi {
            dimension "density"
            resConfigs "hdpi"
            versionCode rootProject.ext.makeVersionCodeForDensity('hdpi')
        }
        xhdpi {
            dimension "density"
            resConfigs "xhdpi"
            versionCode rootProject.ext.makeVersionCodeForDensity('xhdpi')
        }
        xxhdpi {
            dimension "density"
            resConfigs "xxhdpi"
            versionCode rootProject.ext.makeVersionCodeForDensity('xxhdpi')
        }
        xxxhdpi {
            dimension "density"
            resConfigs "xxxhdpi"
            versionCode rootProject.ext.makeVersionCodeForDensity('xxxhdpi')
        }
    }

    sourceSets {
        main {
            // Split resources.
            // https://medium.com/google-developer-experts/android-project-structure-alternative-way-29ce766682f0#.sjnhetuhb
            res.srcDirs = [
                    'src/main/res/bottom_bar',
                    'src/main/res/common',
                    'src/main/res/file_column_detail',
                    'src/main/res/file_column_horizontal_lists',
                    'src/main/res/file_column_list',
                    'src/main/res/file_column_row',
                    'src/main/res/icon',
                    'src/main/res/main',
                    'src/main/res/note',
                    'src/main/res/notification',
                    'src/main/res/permission',
                    'src/main/res/settings'
            ]
        }

        // Everything related to connected test live in src/androidTest/core/java
        androidTest.java.srcDir 'src/androidTest/core/java'

        // Instrumented unit tests live in src/androidTest/unit
        androidTest.java.srcDir 'src/androidTest/unit/java'

        // Instrumented integration tests live in src/androidTest/integration
        androidTest.java.srcDir 'src/androidTest/integration/java'

        // Instrumented use cases tests live in src/androidTest/usecases
        androidTest.java.srcDir 'src/androidTest/usecases/java'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':file-api-android')

    // Language
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Android - Support
    implementation "com.android.support:appcompat-v7:$support_version"
    implementation "com.android.support:design:$support_version"
    implementation "com.android.support:cardview-v7:$support_version"
    implementation "com.android.support:recyclerview-v7:$support_version"

    // Third party - UI
    implementation 'com.hannesdorfmann:adapterdelegates3:3.0.1'
    // https://github.com/Dimezis/BlurView
    implementation 'com.eightbitlab:blurview:1.4.0'

    // Testing-only dependencies
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.18.3'

    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
