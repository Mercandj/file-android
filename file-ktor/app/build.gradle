apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'application'

mainClassName = 'com.mercandalli.server.files.main.MainKt'

sourceCompatibility = 1.8
compileKotlin { kotlinOptions.jvmTarget = "1.8" }
compileTestKotlin { kotlinOptions.jvmTarget = "1.8" }

kotlin { experimental { coroutines "enable" } }

sourceSets {
    main.kotlin.srcDirs += 'main/kotlin'
}

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://dl.bintray.com/kotlin/ktor" }
}

dependencies {
    compile project(':file-api')
    compile project(':file-api-online')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "io.ktor:ktor-server-netty:$ktor_version"
    compile "io.ktor:ktor-auth:$ktor_version"
    compile "ch.qos.logback:logback-classic:1.2.1"
    compile 'org.json:json:20180813'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

static def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyy-MM-dd')
    return formattedDate
}

jar {
    baseName "file-ktor-" + getDate()
    manifest {
        attributes(
                'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Main-Class': 'com.mercandalli.server.files.main.MainKt'
        )
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'com.mercandalli.server.files.main.MainKt'
    }
    baseName = "file-ktor"
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
    destinationDir = file("$rootDir/build/")
}